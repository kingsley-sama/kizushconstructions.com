{"functions":[{"key":"file::read","calling_source":null,"source":null,"line":null,"char":null,"length":null,"doc":"Read a file on localhost and return its contents using ruby's `File.read`. This will\nonly read files on the machine you run Bolt on.","function_version":4,"signatures":[{"key":"file::read(String[1] $filename)","doc":"Read a file on localhost and return its contents using ruby's `File.read`. This will\nonly read files on the machine you run Bolt on.","return_types":["String"],"parameters":[{"name":"filename","doc":"Absolute path or Puppet file path.","types":["String[1]"],"signature_key_offset":21,"signature_key_length":9}]}]},{"key":"file::readable","calling_source":null,"source":null,"line":null,"char":null,"length":null,"doc":"Check if a local file is readable using Puppet's\n`Puppet::Parser::Files.find_file()` function. This will only check files on the\nmachine you run Bolt on.","function_version":4,"signatures":[{"key":"file::readable(String[1] $filename)","doc":"Check if a local file is readable using Puppet's\n`Puppet::Parser::Files.find_file()` function. This will only check files on the\nmachine you run Bolt on.","return_types":["Boolean"],"parameters":[{"name":"filename","doc":"Absolute path or Puppet file path.","types":["String[1]"],"signature_key_offset":25,"signature_key_length":9}]}]},{"key":"file::exists","calling_source":null,"source":null,"line":null,"char":null,"length":null,"doc":"Check if a local file exists using Puppet's\n`Puppet::Parser::Files.find_file()` function. This will only check files that\nare on the machine Bolt is run on.","function_version":4,"signatures":[{"key":"file::exists(String[1] $filename)","doc":"Check if a local file exists using Puppet's\n`Puppet::Parser::Files.find_file()` function. This will only check files that\nare on the machine Bolt is run on.","return_types":["Boolean"],"parameters":[{"name":"filename","doc":"Absolute path or Puppet file path.","types":["String[1]"],"signature_key_offset":23,"signature_key_length":9}]}]},{"key":"file::join","calling_source":null,"source":null,"line":null,"char":null,"length":null,"doc":"Join file paths using ruby's `File.join()` function.","function_version":4,"signatures":[{"key":"file::join(String *$paths)","doc":"Join file paths using ruby's `File.join()` function.","return_types":["String"],"parameters":[{"name":"*paths","doc":"The paths to join.","types":["String"],"signature_key_offset":18,"signature_key_length":7}]}]},{"key":"file::write","calling_source":null,"source":null,"line":null,"char":null,"length":null,"doc":"Write a string to a file on localhost using ruby's `File.write`. This will\nonly write files to the machine you run Bolt on. Use `write_file()` to write\nto remote targets.","function_version":4,"signatures":[{"key":"file::write(String $filename, String $content)","doc":"Write a string to a file on localhost using ruby's `File.write`. This will\nonly write files to the machine you run Bolt on. Use `write_file()` to write\nto remote targets.","return_types":["Undef"],"parameters":[{"name":"filename","doc":"Absolute path.","types":["String"],"signature_key_offset":19,"signature_key_length":9},{"name":"content","doc":"File content to write.","types":["String"],"signature_key_offset":37,"signature_key_length":8}]}]}]}